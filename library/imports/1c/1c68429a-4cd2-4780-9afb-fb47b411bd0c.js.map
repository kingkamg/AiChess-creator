{"version":3,"sources":["../../../../assets/scripts/assets/scripts/GameBoard.js"],"names":["Constant","require","Stone","MoveRule","cc","Class","extends","Component","properties","piecesAtlas","default","type","SpriteAtlas","piecePrefab","Prefab","piecesArrArr","isMyTurn","m_cur_click_stone","onLoad","init32Stones","node","on","Node","EventType","TOUCH_START","e","click_info","get_select_row_col_by_click","row","col","click_stone","m_turn_type","turn_type","red","select_one_stone","console","log","canMove","kill_stone","move_stone","bind","pos","convertToNodeSpaceAR","getLocation","Math","floor","y","left_bottom_pos","len_y","cell_size","x","len_x","pre_prefab","m_piecePrefab","stopAllActions","scale","prefab","runAction","repeatForever","sequence","scaleTo","eatBlackStone","m_is_dead","removeFromParent","m_row","m_col","setPosition","game_board_init_info","k","stone_info","stone_type","createOnePieceByName","stone_res_config","stone","addChild","pieceName","piece","instantiate","getComponent","Sprite","spriteFrame","getSpriteFrame"],"mappings":"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","file":"GameBoard.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["/**\n * 功能：游戏棋盘相关逻辑\n */\n\nvar Constant = require('./Constant.js');\nvar Stone = require('./Stone.js');\nvar MoveRule = require(\"./MoveRule.js\");\n\n//\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        \n        //图集资源，用于初始化棋子prefab\n        piecesAtlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n\n        //棋子prefab\n        piecePrefab:{\n            default: null,\n            type: cc.Prefab\n        },\n\n        //二维数组存储棋子数据\n        piecesArrArr:[],\n\n        //是否轮到我下棋了\n        isMyTurn: true,\n\n        //自己点击的棋子\n        m_cur_click_stone: null\n    },\n\n    //组件加载时，进行变量初始化操作\n    onLoad () {\n\n        //初始化32颗棋子\n        this.init32Stones();\n\n        //初始化点击事件\n        this.node.on(cc.Node.EventType.TOUCH_START, function(e){\n\n            //不论到我走棋，直接返回\n            if(!this.isMyTurn){\n                return;\n            }\n\n            //\n            var click_info = this.get_select_row_col_by_click(e);\n            var row = click_info.row;\n            var col = click_info.col;\n        \n            //\n            if(row < 0 || row > 9 || col < 0 || col > 8){\n                return;\n            }else{\n                var click_stone = this.piecesArrArr[row][col];\n                \n                //点中了一个棋子\n                if(click_stone){\n\n                    //点了红旗，切换当前选中的棋子\n                    if(click_stone.m_turn_type === Constant.turn_type.red){\n\n                        this.select_one_stone(click_stone);\n                \n                    }\n                    //点了黑棋，1.如果当前没有选中棋子，则报错 2.选中了棋子，则试图吃掉当前的黑棋\n                    else{\n          \n                        if(!this.m_cur_click_stone){\n\n                            console.log(\"-----只能走红棋\");\n\n                        }else{\n\n                            //试图去吃黑色棋子 this.m_cur_click_stone\n                            if(MoveRule.canMove(this, row, col)){\n                                this.kill_stone(row, col);\n                            }\n                        }\n                    } \n                }\n                //选中棋子后，又选择了一个空位置\n                else{\n\n                    if(MoveRule.canMove(this, row, col)){\n                        this.move_stone(row, col);\n                    }\n                }\n            }\n\n        }.bind(this), this);\n    },\n\n    //根据点击点获取点击的行列\n    get_select_row_col_by_click: function(e){\n        var pos = this.node.convertToNodeSpaceAR(e.getLocation());\n           \n        var row = Math.floor( (pos.y + Constant.left_bottom_pos.len_y + Constant.cell_size*0.5) / Constant.cell_size);\n        var col = Math.floor( (pos.x + Constant.left_bottom_pos.len_x + Constant.cell_size*0.5) / Constant.cell_size);\n\n        return {\n            row: row,\n            col: col\n        }\n    },\n\n    //选中一颗棋子\n    select_one_stone: function(click_stone){\n\n        if(this.m_cur_click_stone){\n            var pre_prefab = this.m_cur_click_stone.m_piecePrefab;\n            pre_prefab.stopAllActions();\n            pre_prefab.scale = 1;\n        }\n\n        //刷新新的棋子\n        this.m_cur_click_stone = click_stone;\n        var prefab = this.m_cur_click_stone.m_piecePrefab;\n        prefab.stopAllActions();\n        prefab.scale = 1;\n        prefab.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 0.8), cc.scaleTo(0.5, 1.0))));\n    },\n\n    //杀死棋子\n    kill_stone: function(row, col){\n        //1.黑棋被吃掉\n        var eatBlackStone = this.piecesArrArr[row][col];\n        eatBlackStone.m_is_dead = true;\n        eatBlackStone.m_piecePrefab.removeFromParent();\n\n        //2.存的的红棋的位置置空\n        this.piecesArrArr[this.m_cur_click_stone.m_row][this.m_cur_click_stone.m_col] = null;\n\n        //3.走棋后修改红旗属性\n        this.m_cur_click_stone.m_row = row;\n        this.m_cur_click_stone.m_col = col;\n\n        //4.修改红旗新的UI位置\n        var x =  col * Constant.cell_size - Constant.left_bottom_pos.len_x\n        var y =  row * Constant.cell_size - Constant.left_bottom_pos.len_y;\n        this.m_cur_click_stone.m_piecePrefab.setPosition(x, y);\n\n        //5.刷新存储\n        this.piecesArrArr[row][col] = this.m_cur_click_stone;\n\n        //6.走完棋后设置当前未选中棋子\n        var prefab = this.m_cur_click_stone.m_piecePrefab;\n        prefab.stopAllActions();\n        prefab.scale = 1;\n        this.m_cur_click_stone = null;\n    },\n\n    //移动棋子\n    move_stone: function(row, col){\n        //1.清理原来位置\n        this.piecesArrArr[this.m_cur_click_stone.m_row][this.m_cur_click_stone.m_col] = null;                 \n\n        //2.设置新的数据\n        this.m_cur_click_stone.m_row = row;\n        this.m_cur_click_stone.m_col = col;\n        this.piecesArrArr[row][col] = this.m_cur_click_stone;\n\n        //3.更新位置\n        var x =  col * Constant.cell_size - Constant.left_bottom_pos.len_x\n        var y =  row * Constant.cell_size - Constant.left_bottom_pos.len_y;\n        this.m_cur_click_stone.m_piecePrefab.setPosition(x, y);\n\n        //4.走完棋子停止动作\n        var prefab = this.m_cur_click_stone.m_piecePrefab;\n        prefab.stopAllActions();\n        prefab.scale = 1;\n        this.m_cur_click_stone = null;\n    },\n\n    //初始化32颗棋子\n    init32Stones: function(){\n\n        //初始化棋子数组信息\n        for(var row = 0; row <= 9; row++){\n            this.piecesArrArr[row] = [];\n            for(var col = 0; col <= 8; col++){\n                this.piecesArrArr[row][col] = null; \n            }\n        }\n\n        //棋子初始化信息\n        var game_board_init_info = Constant.game_board_init_info;\n\n        for(var k in game_board_init_info){\n            var stone_info = game_board_init_info[k];\n\n            var row = stone_info.row;\n            var col = stone_info.col;\n            var turn_type = stone_info.turn_type;\n            var stone_type = stone_info.stone_type;\n            var piecePrefab = this.createOnePieceByName(Constant.stone_res_config[turn_type][stone_type]);\n\n            //创建一颗棋子\n            var stone = new Stone(turn_type, stone_type, false, row, col, piecePrefab); \n            \n            var x =  col * Constant.cell_size - Constant.left_bottom_pos.len_x\n            var y =  row * Constant.cell_size - Constant.left_bottom_pos.len_y;\n            stone.m_piecePrefab.setPosition(x, y);\n            this.node.addChild(stone.m_piecePrefab);\n            \n            //存储棋子信息\n            this.piecesArrArr[row][col] = stone;\n        } \n    },\n\n    //根据棋子名称创建一颗棋子\n    createOnePieceByName: function(pieceName){\n        var piece = cc.instantiate(this.piecePrefab);\n        piece.getComponent(cc.Sprite).spriteFrame = this.piecesAtlas.getSpriteFrame(pieceName);\n        return piece;\n    }\n});\n"]}