{"version":3,"sources":["../../../../assets/scripts/assets/scripts/GameBoard.js"],"names":["Constant","require","Stone","cc","Class","extends","Component","properties","piecesAtlas","default","type","SpriteAtlas","piecePrefab","Prefab","piecesArrArr","isMyTurn","m_cur_click_stone","onLoad","init32Stones","node","on","Node","EventType","TOUCH_START","e","pos","convertToNodeSpaceAR","getLocation","row","Math","floor","y","left_bottom_pos","len_y","cell_size","col","x","len_x","click_stone","m_turn_type","turn_type","red","pre_prefab","m_piecePrefab","stopAllActions","scale","prefab","runAction","repeatForever","sequence","scaleTo","console","log","eatBlackStone","m_is_dead","removeFromParent","m_row","m_col","setPosition","bind","game_board_init_info","k","stone_info","stone_type","createOnePieceByName","stone_res_config","stone","addChild","pieceName","piece","instantiate","getComponent","Sprite","spriteFrame","getSpriteFrame"],"mappings":"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","file":"GameBoard.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["/**\n * 功能：游戏棋盘相关逻辑\n */\n\nvar Constant = require('./Constant.js');\nvar Stone = require('./Stone.js');\n\n//\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        \n        //图集资源，用于初始化棋子prefab\n        piecesAtlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n\n        //棋子prefab\n        piecePrefab:{\n            default: null,\n            type: cc.Prefab\n        },\n\n        //二维数组存储棋子数据\n        piecesArrArr:[],\n\n        //是否轮到我下棋了\n        isMyTurn: true,\n\n        //自己点击的棋子\n        m_cur_click_stone: null\n    },\n\n    //组件加载时，进行变量初始化操作\n    onLoad () {\n\n        //初始化32颗棋子\n        this.init32Stones();\n\n        //初始化点击事件\n        this.node.on(cc.Node.EventType.TOUCH_START, function(e){\n\n            if(!this.isMyTurn){\n                return;\n            }\n\n            //\n            var pos = this.node.convertToNodeSpaceAR(e.getLocation());\n           \n            var row = Math.floor( (pos.y + Constant.left_bottom_pos.len_y + Constant.cell_size*0.5) / Constant.cell_size);\n            var col = Math.floor( (pos.x + Constant.left_bottom_pos.len_x + Constant.cell_size*0.5) / Constant.cell_size);\n        \n            //\n            if(row < 0 || row > 9 || col < 0 || col > 8){\n                return;\n            }else{\n                var click_stone = this.piecesArrArr[row][col];\n                \n                //点中了一个棋子\n                if(click_stone){\n\n                    //点了红旗，切换当前选中的棋子\n                    if(click_stone.m_turn_type === Constant.turn_type.red){\n\n                        if(this.m_cur_click_stone){\n                            var pre_prefab = this.m_cur_click_stone.m_piecePrefab;\n                            pre_prefab.stopAllActions();\n                            pre_prefab.scale = 1;\n                        }\n\n                        this.m_cur_click_stone = click_stone;\n                        var prefab = this.m_cur_click_stone.m_piecePrefab;\n                        prefab.stopAllActions();\n                        prefab.scale = 1;\n                        prefab.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 0.8), cc.scaleTo(0.5, 1.0))));\n        \n                    }\n                    //点了黑棋，1.如果当前没有选中棋子，则报错 2.选中了棋子，则试图吃掉当前的黑棋\n                    else{\n                        // console.log(\"turn_type:\" + click_stone.m_turn_type + \" stone_type:\" + click_stone.m_stone_type);\n                        if(!this.m_cur_click_stone){\n                            console.log(\"-----只能走红棋\");\n                        }else{\n\n                            //被吃掉的黑棋\n                            var eatBlackStone = this.piecesArrArr[row][col];\n                            eatBlackStone.m_is_dead = true;\n                            eatBlackStone.m_piecePrefab.removeFromParent();\n\n                            //-----之前选中的红棋-----\n                            this.piecesArrArr[this.m_cur_click_stone.m_row][this.m_cur_click_stone.m_col] = null;\n\n                            //1.修改红旗属性\n                            this.m_cur_click_stone.m_row = row;\n                            this.m_cur_click_stone.m_col = col;\n\n                            //2.修改红旗新的UI位置\n                            var x =  col * Constant.cell_size - Constant.left_bottom_pos.len_x\n                            var y =  row * Constant.cell_size - Constant.left_bottom_pos.len_y;\n                            this.m_cur_click_stone.m_piecePrefab.setPosition(x, y);\n\n                            //3.刷新存储\n                            this.piecesArrArr[row][col] = this.m_cur_click_stone;\n\n                            //走完棋后设置当前未选中棋子\n                            var prefab = this.m_cur_click_stone.m_piecePrefab;\n                            prefab.stopAllActions();\n                            prefab.scale = 1;\n                            this.m_cur_click_stone = null;\n\n\n                        }\n                    }\n                    \n                } \n            }\n\n        }.bind(this), this);\n    },\n\n    //初始化32颗棋子\n    init32Stones: function(){\n\n        //初始化棋子数组信息\n        for(var row = 0; row <= 9; row++){\n            this.piecesArrArr[row] = [];\n            for(var col = 0; col <= 8; col++){\n                this.piecesArrArr[row][col] = null; \n            }\n        }\n\n        //棋子初始化信息\n        var game_board_init_info = Constant.game_board_init_info;\n\n        for(var k in game_board_init_info){\n            var stone_info = game_board_init_info[k];\n\n            var row = stone_info.row;\n            var col = stone_info.col;\n            var turn_type = stone_info.turn_type;\n            var stone_type = stone_info.stone_type;\n            var piecePrefab = this.createOnePieceByName(Constant.stone_res_config[turn_type][stone_type]);\n\n            //创建一颗棋子\n            var stone = new Stone(turn_type, stone_type, false, row, col, piecePrefab); \n            \n            var x =  col * Constant.cell_size - Constant.left_bottom_pos.len_x\n            var y =  row * Constant.cell_size - Constant.left_bottom_pos.len_y;\n            stone.m_piecePrefab.setPosition(x, y);\n            this.node.addChild(stone.m_piecePrefab);\n            \n            //存储棋子信息\n            this.piecesArrArr[row][col] = stone;\n        } \n    },\n\n    //根据棋子名称创建一颗棋子\n    createOnePieceByName: function(pieceName){\n        var piece = cc.instantiate(this.piecePrefab);\n        piece.getComponent(cc.Sprite).spriteFrame = this.piecesAtlas.getSpriteFrame(pieceName);\n        return piece;\n    }\n});\n"]}